% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/est_change_raw_approx.R
\name{est_change_raw_approx}
\alias{est_change_raw_approx}
\title{Case Influence on Parameter Estimates (Approximated)}
\usage{
est_change_raw_approx(fit, parameters = NULL, case_id = NULL)
}
\arguments{
\item{parameters}{A character vector to specify the selected
parameters. Each parameter is named as in \code{lavaan} syntax, e.g.,
\code{x ~ y} or \code{x ~~ y}, as appeared in the columns \code{lhs}, \code{op}, and \code{rhs}
in the output of \code{\link[lavaan:parameterEstimates]{lavaan::parameterEstimates()}}.
Supports specifying an operator to select all parameters with this
operators: \code{~}, \verb{~~}, \verb{=~}, and \code{~1}. This vector can contain
both parameter names and operators.
If \code{NULL}, the
default, differences on all free parameters will be computed.}

\item{case_id}{If it is a character vector of length equals to the
number of cases (the number of rows in the data in \code{fit}), then it
is the vector of case identification values. If it is \code{NULL}, the
default, then \code{case.idx} used by \code{lavaan} functions will be used
as case identification values.}

\item{rerun_out}{The output from \code{\link[=lavaan_rerun]{lavaan_rerun()}}.}
}
\value{
A matrix with the number of columns equals to the number of
requested parameters, and the number of rows equals to the number
of cases. The row names are case identification values. The
elements are the raw differences.
}
\description{
Gets a \code{\link[lavaan:lavaan]{lavaan::lavaan()}} output and estimates the
changes in selected parameters for each case.
}
\details{
For each case, \code{\link[=est_change_raw_approx]{est_change_raw_approx()}} computes the
approximated differences
in the estimates of selected parameters with and without this
case: (estimate with all case) - (estimate without this case). The
change is the raw change, either for the standardized or
unstandardized solution. The change is \emph{not} divided by standard
error.

The model is not refitted. Therefore, the result is only an
approximation of that of \code{\link[=est_change_raw]{est_change_raw()}}. However, this
approximation is useful for identifying potentially influential
cases when the sample size is very large or the model takes a long
time to fit. This function can be used to identify potentially
influential cases quickly and then select them to conduct the
leave-one-out sensitivity analysis using \code{\link[=lavaan_rerun]{lavaan_rerun()}} and
\code{\link[=est_change_raw]{est_change_raw()}}.

Currently it only supports single-group models.
}
\examples{
library(lavaan)
dat <- pa_dat
# For illustration only, select only the first 50 cases
dat <- dat[1:50, ]
# The model
mod <-
"
m1 ~ iv1 + iv2
dv ~ m1
"
# Fit the model
fit <- lavaan::sem(mod, dat)
summary(fit)
# Fit the model n times. Each time with one case removed.
fit_rerun <- lavaan_rerun(fit, parallel = FALSE)
# Compute the changes in parameter estimates if a case is removed
out <- est_change_raw(fit_rerun)
# Results excluding a case, for the first few cases
head(out)
# Note that these are the differences in parameter estimates.

# The parameter estimates from all cases
(coef_all <- coef(fit))
# The parameter estimates from manually deleting the first case
fit_no_1 <- lavaan::sem(mod, dat[-1, ])
(coef_no_1 <- coef(fit_no_1))
# The differences
coef_all - coef_no_1
# The first row of `est_change_raw(fit_rerun)`
round(out[1, ], 3)

# Compute only the changes of the paths from iv1 and iv2 to m1
out2 <- est_change_raw(fit_rerun, c("m1 ~ iv1", "m1 ~ iv2"))
# Results excluding a case, for the first few cases
head(out2)
# Note that only the changes in the selected paths are included.

# Use standardized = TRUE to compare the differences in standardized solution
out2_std <- est_change_raw(fit_rerun,
                          c("m1 ~ iv1", "m1 ~ iv2"),
                          standardized = TRUE)
head(out2_std)
(est_std_all <- parameterEstimates(fit,
                 standardized = TRUE)[1:2, c("lhs", "op", "rhs", "std.all")])
(est_std_no_1 <- parameterEstimates(fit_no_1,
                 standardized = TRUE)[1:2, c("lhs", "op", "rhs", "std.all")])
# The differences
est_std_all$std.all - est_std_no_1$std.all
# The first row of `out2_std`
out2_std[1, ]

}
\author{
Idea by Mark Hok Chio Lai \url{https://orcid.org/0000-0002-9196-7406},
Implemented by Shu Fai Cheung \url{https://orcid.org/0000-0002-9871-9448}.
}
