% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/lavaan_rerun.R
\name{lavaan_rerun}
\alias{lavaan_rerun}
\title{Rerun a \code{lavaan} analysis with one-left-out}
\usage{
lavaan_rerun(
  fit,
  case_id = NULL,
  parallel = TRUE,
  makeCluster_args = list(spec = getOption("cl.cores", 2))
)
}
\arguments{
\item{fit}{The output from \code{lavaan}, such as \code{\link[lavaan:cfa]{lavaan::cfa()}} and
\code{\link[lavaan:sem]{lavaan::sem()}}.}

\item{case_id}{If this
is a character vector of
length equal to the number of cases (the number of rows in the
data), then it is the vector of case identification values.
If this is the \code{NULL}, the default, then \code{case.idx} used
by \code{lavaan} functions will be used as case identification
values. The case identification
values will be used to name the list of \code{n} output.}

\item{parallel}{Whether parallel will be used. If \code{TRUE}, will use
parallel to rerun the analysis. Currently, only support
\code{"FORK"} type cluster using local CPU cores. Default is
\code{FALSE}.}

\item{makeCluster_args}{A named list of arguments to be passed to
\code{\link[parallel:makeCluster]{parallel::makeCluster()}}. Default is
\verb{list(spec = getOption("cl.cores", 2)))}.}
}
\value{
Return a list with two elements
\itemize{
\item \code{rerun}: The \emph{n} \code{lavaan} output objects.
\item \code{fit}: The original output from \code{lavaan}.
\item \code{call}: The call to \code{\link[=lavaan_rerun]{lavaan_rerun()}}.
}
}
\description{
Rerun a \code{lavaan} analysis \emph{n} times, each time with one case left out.
}
\details{
Rerun a \code{lavaan} analysis using the same arguments and options \emph{n} times, \emph{n}
equal to the number of cases. In each run, one case will be left out.

Currently only work for one group analysis.
}
\examples{
# To be prepared.

}
