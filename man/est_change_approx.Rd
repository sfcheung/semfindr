% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/est_change_approx.R
\name{est_change_approx}
\alias{est_change_approx}
\title{Standardized Case Influence on Parameter Estimates (Approximated)}
\usage{
est_change_approx(fit, parameters = NULL, case_id = NULL)
}
\arguments{
\item{fit}{The output from \code{\link[lavaan:lavaan]{lavaan::lavaan()}}.}

\item{parameters}{A character vector to specify the selected
parameters. Each parameter is named as in \code{lavaan} syntax, e.g.,
\code{x ~ y} or \code{x ~~ y}, as appeared in the columns \code{lhs}, \code{op}, and \code{rhs}
in the output of \code{\link[lavaan:parameterEstimates]{lavaan::parameterEstimates()}}.
Supports specifying an operator to select all parameters with this
operators: \code{~}, \verb{~~}, \verb{=~}, and \code{~1}. This vector can contain
both parameter names and operators.
If \code{NULL}, the
default, differences on all free parameters will be computed.}

\item{case_id}{If it is a character vector of length equals to the
number of cases (the number of rows in the data in \code{fit}), then it
is the vector of case identification values. If it is \code{NULL}, the
default, then \code{case.idx} used by \code{lavaan} functions will be used
as case identification values.}
}
\value{
A matrix with the number of columns equal to the number of
requested parameters, and the number of rows equal to the number
of cases. The row names are the case identification values used in
\code{\link[=lavaan_rerun]{lavaan_rerun()}}. The elements are the standardized difference.
Please see Pek and MacCallum (2011), Equation 7.
}
\description{
Gets a \code{\link[lavaan:lavaan]{lavaan::lavaan()}} output and computes the
standardized changes in selected parameters for each case.
}
\details{
For each case, \code{\link[=est_change_approx]{est_change_approx()}} computes the
approximated differences in the estimates of selected parameters
with and without this case: (estimate with all case) - (estimate
without this case). The differences are standardized by dividing
the approximated raw differences by their standard errors.

The model is not refitted. Therefore, the result is only an
approximation of that of \code{\link[=est_change]{est_change()}}. However, this
approximation is useful for identifying potentially influential
cases when the sample size is very large or the model takes a long
time to fit. This function can be used to identify potentially
influential cases quickly and then select them to conduct the
leave-one-out sensitivity analysis using \code{\link[=lavaan_rerun]{lavaan_rerun()}} and
\code{\link[=est_change_raw]{est_change_raw()}}.

This function also computes the approximated generalized Cook's
distance (gCD). To avoid confusion, it is labelled \code{gcd_approx}.

Currently it only supports single-group models.
}
\examples{
library(lavaan)
dat <- pa_dat
# The model
mod <-
"
m1 ~ a1 * iv1 + a2 * iv2
dv ~ b * m1
a1b := a1 * b
a2b := a2 * b
"
# Fit the model
fit <- lavaan::sem(mod, dat)
summary(fit)

# Approximated standardized changes and gcd
out_approx <- est_change_approx(fit)
head(out_approx)

# Fit the model several times. Each time with one case removed.
# For illustration, do this only for the first 10 cases.
fit_rerun <- lavaan_rerun(fit, parallel = FALSE,
                          to_rerun = 1:10)
# Compute the changes in chisq if a case is removed
out <- est_change(fit_rerun)
head(out)

# Compare the results
plot(out_approx[1:10, 1], out[, 1])
abline(a = 0, b = 1)
plot(out_approx[1:10, 2], out[, 2])
abline(a = 0, b = 1)
plot(out_approx[1:10, 3], out[, 3])
abline(a = 0, b = 1)
plot(out_approx[1:10, "gcd_approx"], out[, "gcd"])
abline(a = 0, b = 1)

# A CFA model

dat <- cfa_dat
mod <-
"
f1 =~  x1 + x2 + x3
f2 =~  x4 + x5 + x6
f1 ~~ f2
"
# Fit the model
fit <- lavaan::cfa(mod, dat)
summary(fit)

# Approximated standardized changes and gCD
# Compute gCD only for free loadings
out_approx <- est_change_approx(fit,
                                parameters = "=~")
head(out_approx)

# A latent variable model

dat <- sem_dat
mod <-
"
f1 =~  x1 + x2 + x3
f2 =~  x4 + x5 + x6
f3 =~  x7 + x8 + x9
f2 ~   a * f1
f3 ~   b * f2
ab := a * b
"
# Fit the model
fit <- lavaan::sem(mod, dat)
summary(fit)

# Approximated standardized changes and gCD
# Compute gCD only for structural paths
out_approx <- est_change_approx(fit,
                                parameters = "~")
head(out_approx)



}
\author{
Idea by Mark Hok Chio Lai \url{https://orcid.org/0000-0002-9196-7406},
Implemented by Shu Fai Cheung \url{https://orcid.org/0000-0002-9871-9448}.
}
